on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ['windows-latest']
    strategy:
      fail-fast: false

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: 3.7

    - run: pip install -r requirements.txt
    - run: pyinstaller generate_ppt_from_txt.py --onefile --icon=lyrics2ppt.ico --name=lyrics2ppt
    # Optionally verify that it works (provided that it does not need user interaction)
    - run: ./dist/lyrics2ppt.exe
    - uses: actions/upload-artifact@v2
      with:
        path: dist/*

  release:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: windows-latest
    needs: build
    env:
      EXECUTABLE_NAME: lyrics2ppt.exe

    steps:
    - uses: actions/checkout@v2

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      if: ${{ github.event.inputs.upload_artifact == 'true' }}
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/${{ github.event.inputs.executable_name }}
        asset_name: ${{ github.event.inputs.executable_name }}
        asset_content_type: application/octet-stream
