name: Build and Release

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'  # Trigger only when a tag starting with 'v' is pushed
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Name of the tag'
        required: false
        default: 'v1.0.0'
      upload_artifact:
        description: 'Upload artifact to release'
        required: false
        default: 'true'

jobs:
  build:
    runs-on: windows-latest
    strategy:
      fail-fast: false

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: 3.7

    - run: pip install -r requirements.txt
    - run: pyinstaller generate_ppt_from_txt.py --onefile --icon=lyrics2ppt.ico --name=lyrics2ppt
    # Optionally verify that it works (provided that it does not need user interaction)
    - run: ./dist/lyrics2ppt.exe
    - uses: actions/upload-artifact@v2
      with:
        name: build-artifact
        path: dist/*

        
  release:
    runs-on: windows-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'

    steps:
    - uses: actions/checkout@v2

    - name: Download Build Artifact
      uses: actions/download-artifact@v2
      with:
        name: build-artifact
        path: ./dist

    - name: Determine Tag Name
      id: determine_tag_name
      run: |
        if ($env:GITHUB_REF -like "refs/tags/*") {
          # Extract the tag name from GITHUB_REF
          $tag_name = $env:GITHUB_REF.Substring(10)  # Remove 'refs/tags/' (10 characters)
          echo "TAG_NAME=$tag_name" >> "$GITHUB_ENV" # Set the environment variable
        } else {
          # Use the tag_name from the event input
          echo "TAG_NAME=${{ github.event.inputs.tag_name }}" >> "$GITHUB_OUTPUT"
          echo "SELECTED_COLOR=green" >> "$GITHUB_OUTPUT"
          echo "TAG_NAME=" >> "$GITHUB_ENV" # Set the environment variable
        }

    - name: Debug Tag Name
      env:
        TAG_NAME: ${{ steps.determine_tag_name.outputs.TAG_NAME }}
        SELECTED_COLOR: ${{ steps.color-selector.outputs.SELECTED_COLOR }}
      run: | 
        echo "$TAG_NAME $SELECTED_COLOR"

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }}
        TAG_NAME: ${{ steps.determine_tag_name.outputs.TAG_NAME }}
      with:
        tag_name: $TAG_NAME
        release_name: Release $TAG_NAME
        draft: false
        prerelease: false

    - name: Upload Release Asset
      if: ${{ github.event.inputs.upload_artifact == 'true' }}
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/lyrics2ppt.exe
        asset_name: lyrics2ppt.exe
        asset_content_type: application/octet-stream
